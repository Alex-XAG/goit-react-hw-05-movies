{"version":3,"file":"static/js/716.021c98be.chunk.js","mappings":"qQAeaA,GAZaC,EAAAA,EAAAA,GAAH,yMAYcA,EAAAA,EAAAA,IAAH,kHAQrBC,EAAiBD,EAAAA,EAAAA,QAAH,2KAWdE,EAAiBF,EAAAA,EAAAA,QAAH,kIASdG,EAAeH,EAAAA,EAAAA,GAAH,8FAOZI,EAAkBJ,EAAAA,EAAAA,GAAH,8FAOfK,EAAcL,EAAAA,EAAAA,EAAH,8FAOXM,EAAcN,EAAAA,EAAAA,GAAH,gLAYXO,GAAcP,EAAAA,EAAAA,GAAOQ,EAAAA,GAAPR,CAAH,6M,kBCSxB,EAnEsB,WAAO,IAAD,EAC1B,GAAwCS,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAEQC,GAAaC,EAAAA,EAAAA,MAAbD,SACAE,EAA4CR,EAA5CQ,cAAeC,EAA6BT,EAA7BS,eAAgBC,EAAaV,EAAbU,SAEjCC,GAAWC,EAAAA,EAAAA,MACXC,GAAqB,OAARF,QAAQ,IAARA,GAAA,UAAAA,EAAUG,aAAV,eAAiBC,OAAQ,IAyB5C,OAvBAC,EAAAA,EAAAA,YAAU,WACRX,GAAa,GAEXY,MAAM,GAAD,OAjBM,uCAiBN,OAAeX,EAAf,YAhBK,2CAgBL,oBACFY,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACJpB,EAAgBoB,EACjB,IACAC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,IACTG,QAAQrB,GAAa,GAG3B,GAAE,CAACC,KAEJU,EAAAA,EAAAA,YAAU,WACR,GAAKhB,EAAaE,OAAlB,CAGA,IAAMA,EAASF,EAAaE,OAAOyB,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAE5C1B,EAAUD,EAAO4B,KAAK,MAHrB,CAIF,GAAE,CAAC9B,EAAcE,KAGhB,UAACb,EAAD,YACE,SAACQ,EAAD,CAAakC,GAAIlB,EAAjB,SAA6B,kCAC7B,UAACtB,EAAD,YACE,0BACE,gBAAKyC,IAAG,UA3CG,mCA2CH,OAAoBxB,GAAiByB,IAAKxB,OAEpD,UAACjB,EAAD,YACE,SAACC,EAAD,UAAegB,KACf,SAACd,EAAD,UAAa,qBACb,SAACD,EAAD,UAAiB,cACjB,SAACC,EAAD,UAAce,KACd,SAAChB,EAAD,UAAiB,YACjB,SAACC,EAAD,UAAcO,WAIlB,UAACN,EAAD,YACE,yBACE,SAACC,EAAD,CAAakC,GAAG,OAAhB,SAAuB,YAEzB,yBACE,SAAClC,EAAD,CAAakC,GAAG,UAAhB,SAA0B,kBAG9B,SAAC,EAAAG,SAAD,CAAUC,UAAU,yBAAK,gBAAzB,UACE,SAAC,KAAD,MAED/B,IAAa,SAACgC,EAAA,EAAD,MAGnB,C,6ECjFYA,EAAS,WACpB,OACE,+BACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,QACNC,UAAU,UACVC,cAAY,EACZC,cAAY,KAInB,C","sources":["Pages/MoviesDetails/MoviesDetails.styled.js","Pages/MoviesDetails/MoviesDetails.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  justify-content: center;\n  align-items: center;\n  list-style: none;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const MovieDetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  gap: 20px;\n`;\n\nexport const DetailsSection = styled.section`\n  display: flex;\n\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  padding-bottom: 30px;\n\n  border-bottom: 2px solid gold;\n`;\n\nexport const DetailsArticle = styled.article`\n  display: flex;\n  flex-direction: column;\n  width: 700px;\n  justify-content: center;\n\n  gap: 20px;\n`;\n\nexport const DetailsTitle = styled.h2`\n  padding: 0;\n  margin: 0;\n  font-size: 30px;\n  font-weight: 700;\n`;\n\nexport const DetailsSubTitle = styled.h3`\n  padding: 0;\n  margin: 0;\n  font-size: 30px;\n  font-weight: 700;\n`;\n\nexport const DetailsText = styled.p`\n  padding: 0;\n  margin: 0;\n  font-size: 20px;\n  font-weight: 400;\n`;\n\nexport const DetailsList = styled.ul`\n  display: flex;\n\n  gap: 20px;\n  justify-content: center;\n  align-items: center;\n  list-style: none;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const DetailsLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  border-radius: 10px;\n  padding: 10px 30px;\n  font-style: 25px;\n  font-weight: 700;\n\n  :hover {\n    background-color: beige;\n  }\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  DetailsArticle,\n  DetailsLink,\n  DetailsList,\n  DetailsSection,\n  DetailsSubTitle,\n  DetailsText,\n  DetailsTitle,\n  MovieDetailsContainer,\n} from './MoviesDetails.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst IMG_BASE_URL = 'https://image.tmdb.org/t/p/w500';\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/';\nconst API_KEY = 'api_key=fcd230550d5bc22e169a178a7e9d550c';\n\nconst MoviesDetails = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const [genres, setGenres] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { moviesId } = useParams();\n  const { backdrop_path, original_title, overview } = movieDetails;\n\n  const location = useLocation();\n  const goBackLink = location?.state?.from || '/';\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getMovieData = () =>\n      fetch(`${BASE_URL}${moviesId}?${API_KEY}&language=en-US`)\n        .then(response => response.json())\n        .then(movieData => {\n          setMovieDetails(movieData);\n        })\n        .catch(err => console.error(err))\n        .finally(setIsLoading(false));\n\n    getMovieData();\n  }, [moviesId]);\n\n  useEffect(() => {\n    if (!movieDetails.genres) {\n      return;\n    }\n    const genres = movieDetails.genres.map(genre => genre.name);\n\n    setGenres(genres.join(', '));\n  }, [movieDetails, genres]);\n\n  return (\n    <MovieDetailsContainer>\n      <DetailsLink to={goBackLink}>Back to the page colletction</DetailsLink>\n      <DetailsSection>\n        <div>\n          <img src={`${IMG_BASE_URL}${backdrop_path}`} alt={original_title} />\n        </div>\n        <DetailsArticle>\n          <DetailsTitle>{original_title}</DetailsTitle>\n          <DetailsText>User score: ???</DetailsText>\n          <DetailsSubTitle>Overview</DetailsSubTitle>\n          <DetailsText>{overview}</DetailsText>\n          <DetailsSubTitle>Genres</DetailsSubTitle>\n          <DetailsText>{genres}</DetailsText>\n        </DetailsArticle>\n      </DetailsSection>\n\n      <DetailsList>\n        <li>\n          <DetailsLink to=\"cast\">Cast</DetailsLink>\n        </li>\n        <li>\n          <DetailsLink to=\"reviews\">Reviews</DetailsLink>\n        </li>\n      </DetailsList>\n      <Suspense fallback={<div>Loading ...</div>}>\n        <Outlet />\n      </Suspense>\n      {isLoading && <Loader />}\n    </MovieDetailsContainer>\n  );\n};\n\nexport default MoviesDetails;\n","import { Audio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <Audio\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"green\"\n        ariaLabel=\"loading\"\n        wrapperStyle\n        wrapperClass\n      />\n    </>\n  );\n};\n"],"names":["MovieDetailsContainer","styled","DetailsSection","DetailsArticle","DetailsTitle","DetailsSubTitle","DetailsText","DetailsList","DetailsLink","Link","useState","movieDetails","setMovieDetails","genres","setGenres","isLoading","setIsLoading","moviesId","useParams","backdrop_path","original_title","overview","location","useLocation","goBackLink","state","from","useEffect","fetch","then","response","json","movieData","catch","err","console","error","finally","map","genre","name","join","to","src","alt","Suspense","fallback","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass"],"sourceRoot":""}